swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  description: "Snippy REST API"
  version: "1.0.0"
  title: "Snippy REST API"
  termsOfService: "https://github.com/heilaaks/snippy"
  contact:
    email: "laaksonen.heikki.j@gmail.com"
  license:
    name: "Apache 2.0"
    url: "https://github.com/heilaaks/snippy/blob/master/LICENSE"
host: "snippettips.com"
basePath: "/api"

################################################################################
#                                           Paths                              #
################################################################################
paths:
  /snippets:
    post:
      tags:
      - "snippet"
      summary: "Add new snippet"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New snippet that is stored"
        required: true
        schema:
          $ref: "#/definitions/Content"
      responses:
        201:
          description: "Snippet created"
        405:
          description: "Invalid input"
    get:
      tags:
      - "snippet"
      summary: "Search snippets"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/text"
      - "application/yaml"
      parameters:
        - name: sall
          type: array
          items:
            type: string
          in: query
          required: false
          description: Search keywords from all fields.
        - name: stag
          type: array
          items:
            type: string
          in: query
          required: false
          description: Search keywords only from tag field.
        - name: sgrp
          type: array
          items:
            type: string
          in: query
          required: false
          description: Search keywords only from group field.
        - name: digest
          type: string
          in: query
          required: false
          description: Search only based on message digest.
        - name: data
          type: string
          in: query
          required: false
          description: Search only from content data.
        - name: filter
          type: string
          in: query
          required: false
          description: Filter search result with regexp.
        - name: limit
          type: integer
          default: 20
          in: query
          required: false
          description: Limit query results.
        - name: sort
          type: string
          default: brief
          enum: [data, brief, group, tags, links, category, filename, runalias, versions, utc, digest, key]
          in: query
          required: false
          description: Sort based on defined column.
        - name: fields
          type: array
          items:
            type: string
            enum: [data, brief, group, tags, links, category, filename, runalias, versions, utc, digest, key]
          in: query
          required: false
          description: Limit fields that are returned.
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Content"
        400:
          description: "Search request not correct"
        404:
          description: "Snippet not found"
    delete:
      tags:
      - "snippet"
      summary: "Delete existing snippet"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: digest
          type: string
          in: query
          required: false
          description: Search only based on message digest.
        - name: data
          type: string
          in: query
          required: false
          description: Search only from content data.
      responses:
        400:
          description: "Invalid search parameters"
        404:
          description: "Snippet not found"
        405:
          description: "More than one snippet found"

  /snippets/{digest}:
    put:
      tags:
      - "snippet"
      summary: "Update an existing snippet"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: Unique snippet identified by message digest.
        - name: body
          in: body
          description: "Existing snippet that is updated"
          required: true
          schema:
            $ref: "#/definitions/Content"
      responses:
        201:
          description: "Snippet updated"
        400:
          description: "Invalid digest supplied"
        404:
          description: "Snippet not found"
        405:
          description: "Validation exception"
    get:
      tags:
      - "snippet"
      summary: "Search snippets"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/text"
      - "application/yaml"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
        400:
          description: "Search request not correct"
        404:
          description: "Solution not found"
    delete:
      tags:
      - "snippet"
      summary: "Delete an existing snippet"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        204:
          description: "Snippet deleted"
        404:
          description: "Snippet not found"
        405:
          description: "More than one snippet found"

  /snippets/{digest}/data:
    get:
      tags:
      - "snippet"
      summary: "Search snippets"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/text"
      - "application/yaml"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: Unique snippet identified by message digest.
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Content"
        400:
          description: "Search request not correct"
        404:
          description: "Solution not found"

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Content:
    type: object
    properties:
      data:
        type: string
        description: The content data for the snippet.
      brief:
        type: string
        description: A brief description of the snippet.
      group:
        type: string
        description: A single group where the snippet belongs.
      tags:
        type: array
        items:
          type: string
        description: Comma separated list of tags.
      links:
        type: array
        items:
          type: string
        description: Comma separated list of links for reference.
      category:
        type: string
        enum: [snippet, solution]
        description: Category of the content that is automatically assigned as 'snippet'.
      filename:
        type: string
        description: Optional filename that is automatically used if the snippet is exported.
      runalias:
        type: string
        description: Optional alias to run the snippet.
      versions:
        type: string
        description: Optional list of services and versions related to the snippet.
      utc:
        type: string
        description: Optional UTC timestamp that is automatically assigned if left out.
      digest:
        type: string
        description: Automatically assigned message digest that uniquely identifies the snippet.
      metadata:
        type: string
        description: Automatically assigned internal metadata.
      key:
        type: string
        description: Automatically assigned key for the snippet.
  Search:
    type: object
    properties:
      sall:
        type: array
        items:
          type: string
        description: Search keywords from all fields.
      stag:
        type: array
        items:
          type: string
        description: Search keywords only from tag field.
      sgrp:
        type: array
        items:
          type: string
        description: Search keywords only from group field.
      digest:
        type: string
        description: Search only based on message digest.
      data:
        type: string
        description: Search only from content data.
      filter:
        type: string
        description: Filter search result with regexp.
