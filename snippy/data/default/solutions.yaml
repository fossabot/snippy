content:
- brief: Testing docker log drivers
  category: solution
  data:
  - '################################################################################'
  - '## BRIEF : Testing docker log drivers'
  - '##'
  - '## DATE  : 2017-10-30 08:17:10'
  - '## GROUP : docker'
  - '## TAGS  : docker,moby,kubernetes,logging,plugin,driver,kafka,logs2kafka'
  - '## FILE  : kubernetes-docker-log-driver-kafka.txt'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Investigating docker log driver and especially the Kafka plugin.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Kube Kafka log driver'
  - '    > https://github.com/MickayG/moby-kafka-logdriver'
  - ''
  - '    # Logs2Kafka'
  - '    > https://groups.google.com/forum/#!topic/kubernetes-users/iLDsG85exRQ'
  - '    > https://github.com/garo/logs2kafka'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Get logs from pods'
  - '    $ kubectl get pods'
  - '    $ kubectl logs kafka-0'
  - ''
  - '    # Install docker log driver for Kafka'
  - '    $ docker ps --format "{{.Names}}" | grep -E ''kafka|logstash'''
  - '    $ docker inspect k8s_POD_kafka-0...'
  - '    $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_kafka-0...'
  - '    $ docker plugin install --disable mickyg/kafka-logdriver:latest'
  - '    $ docker plugin set mickyg/kafka-logdriver:latest KAFKA_BROKER_ADDR="10.2.28.10:9092"'
  - '    $ docker plugin inspect mickyg/kafka-logdriver'
  - '    $ docker plugin enable mickyg/kafka-logdriver:latest'
  - '    $ docker run --log-driver mickyg/kafka-logdriver:latest hello-world'
  - '    $ docker plugin disable mickyg/kafka-logdriver:latest'
  - ''
  - '    # Get current docker log driver'
  - '    $ docker info |grep ''Logging Driver'' # Default driver'
  - '    $ docker ps --format "{{.Names}}" | grep -E ''kafka|logstash'''
  - '    $ docker inspect k8s_POD_kafka-0...'
  - '    $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_logstash...'
  - '    $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_kafka-0...'
  - '    $ docker inspect $(docker ps | grep POD | awk ''{print $1}'') | grep -E "Hostname|NetworkID'
  - '    $ docker inspect $(docker ps | grep POD | awk ''{print $1}'') | while read
    line ; do egrep -E ''"Hostname"|"IPAddress"'' ; done | while read line ; do echo
    $line ; done'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Logstash configuration'
  - '    $ vi elk-stack/logstash/build/pipeline/kafka.conf'
  - '      input {'
  - '          gelf {}'
  - '      }'
  - ''
  - '      output {'
  - '          elasticsearch {'
  - '            hosts => ["elasticsearch"]'
  - '          }'
  - '          stdout {}'
  - '      }'
  - ''
  - '    # Kafka configuration'
  - '    $ vi elk-stack/logstash/build/pipeline/kafka.conf'
  - '    kafka {'
  - '        type => "argus.docker"'
  - '        topics => ["dockerlogs"]'
  - '        codec => "plain"'
  - '        bootstrap_servers => "kafka:9092"'
  - '        consumer_threads => 1'
  - '    }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: ce6ef2f0408ff3780dc4f34b93d281cd2a3c6b8d36ebfb8929b1d86f803e98b8
  filename: kubernetes-docker-log-driver-kafka.txt
  group: docker
  links:
  - https://github.com/MickayG/moby-kafka-logdriver
  - https://github.com/garo/logs2kafka
  - https://groups.google.com/forum/#!topic/kubernetes-users/iLDsG85exRQ
  runalias: ''
  tags:
  - docker
  - driver
  - kafka
  - kubernetes
  - logging
  - logs2kafka
  - moby
  - plugin
  utc: '2017-10-30 08:24:28'
  versions: ''
- brief: Debugging nginx
  category: solution
  data:
  - '################################################################################'
  - '## BRIEF : Debugging nginx '
  - '##'
  - '## DATE  : 2017-10-20 06:16:27'
  - '## GROUP : nginx'
  - '## TAGS  : nginx,debug,logging,howto'
  - '## FILE  : howto-debug-nginx.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Instructions how to debug nginx.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # nginx version: nginx/1.13.5'
  - ''
  - '    # Release notes'
  - '    > http://nginx.org/en/CHANGES'
  - ''
  - '    # Official nginx debugging'
  - '    > https://www.nginx.com/resources/admin-guide/debug/'
  - ''
  - '    # Dynamic upstreams'
  - '    > https://www.nginx.com/blog/dns-service-discovery-nginx-plus/'
  - '    > https://tenzer.dk/nginx-with-dynamic-upstreams/'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Test if nginx is configured with --with-debug'
  - '    $ nginx -V 2>&1 | grep -- ''--with-debug'''
  - ''
  - '    # Check the logs are forwarded to stdout/stderr and remove links'
  - '    $ ls -al /var/log/nginx/'
  - '    $ unlink /var/log/nginx/access.log'
  - '    $ unlink /var/log/nginx/error.log'
  - ''
  - '    # Reloading nginx configuration'
  - '    $ nginx -s reload'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Pass query parameters from nginx location by adding $is_args$args:'
  - '    location ~ /elastic(/|$)(.*) {'
  - '        set $elasticsearch_servers elasticsearch;'
  - '        proxy_pass                 http://$elasticsearch_servers:9200/$2$is_args$args;'
  - '    }'
  - ''
  - '    # Configure Kibana behind specific base path.'
  - '    #'
  - '    # It may be that the Kibana does not working correctly with base'
  - '    # path. Because of this /1/, a rewrite is currently needed. It'
  - '    # may be because of reroute below, the forwarding with 302 does'
  - '    # not work. It is left as an example here.'
  - '    # /1/ https://github.com/elastic/kibana/issues/5230#issuecomment-288737969'
  - '    $ vi kibana.yaml'
  - '      server.basePath: "/kibana"'
  - '      xpack.reporting.kibanaApp: "/kibana/app/kibana"'
  - ''
  - '    $ vi default.conf'
  - '      server {'
  - '          location /kibana/ {'
  - '              proxy_pass http://kibana:5601;'
  - '              proxy_http_version 1.1;'
  - '              proxy_set_header Upgrade $http_upgrade;'
  - '              proxy_set_header Connection "upgrade";'
  - '              proxy_set_header Host $host;'
  - '              rewrite /kibana/(.*)$ /$1 break;'
  - '          }'
  - '          # Handle landing url without trailing slash.'
  - '          location = /kibana {'
  - '             return 302 /kibana/;'
  - '          }'
  - '      }'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Configuring nginx default.conf. The upstream blocks are resolved only'
  - '    # once when the nginx starts. The variable trick allows resolving the'
  - '    # IP address. This allows recovery from situations where for example'
  - '    # a docker container restart changes the IP address. See ''Dynamic'
  - '    # upstreams'' for more information.'
  - '    $ vi conf.d/default.conf'
  - '      upstream kibana_servers {'
  - '          server kibana:5601;'
  - '      }'
  - '      upstream elasticsearch_servers {'
  - '          server elasticsearch:9200;'
  - '      }'
  - '      #resolver 127.0.0.11 valid=1s ipv6=off; # Resolver for docker container.'
  - '      server {'
  - '          listen 9200;'
  - '          add_header X-Frame-Options "SAMEORIGIN";'
  - '          proxy_set_header        Host $host;'
  - '          proxy_set_header        X-Real-IP $remote_addr;'
  - '          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;'
  - '          proxy_set_header        X-Forwarded-Proto $scheme;'
  - '          proxy_set_header        X-Forwarded-Host $http_host;'
  - '          location / {'
  - '                  set $kibana_servers     kibana;'
  - '                  proxy_pass              http://$kibana_test:5601;'
  - '                  #proxy_pass             http://kibana_servers;'
  - '          }'
  - '          location /kibana {'
  - '                  proxy_pass              http://kibana_servers/app/kibana;'
  - '          }'
  - '          location ~ /elastic(/|$)(.*) {'
  - '                  proxy_pass              http://elasticsearch_servers/$2$is_args$args;'
  - '          }'
  - '      }'
  - ''
  - '    $ vi nginx.conf'
  - '      user  nginx;'
  - '      worker_processes  1;'
  - ''
  - '      error_log  /var/log/nginx/error.log debug;'
  - '      pid        /var/run/nginx.pid;'
  - ''
  - '      events {'
  - '          worker_connections  1024;'
  - '      }'
  - ''
  - '      http {'
  - '          include       /etc/nginx/mime.types;'
  - '          default_type  application/octet-stream;'
  - ''
  - '          log_format  main  ''$remote_addr - $remote_user [$time_local] "$request"
    '''
  - '                            ''$status $body_bytes_sent "$http_referer" '''
  - '                            ''"$http_user_agent" "$http_x_forwarded_for"'';'
  - ''
  - '          access_log  /var/log/nginx/access.log  main;'
  - ''
  - '          sendfile        on;'
  - '          #tcp_nopush     on;'
  - ''
  - '          keepalive_timeout  65;'
  - ''
  - '          #gzip  on;'
  - ''
  - '          include /etc/nginx/conf.d/*.conf;'
  - '      }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  - '    # Change nginx configuration'
  - '    $ docker exec -i -t $(docker ps | egrep -m 1 ''petelk/nginx'' | awk ''{print
    $1}'') /bin/bash'
  - '    $ echo '''
  - '      upstream kibana_servers {'
  - '          server kibana:5601;'
  - '      }'
  - '      upstream elasticsearch_servers {'
  - '          server elasticsearch:9200;'
  - '      }'
  - '      upstream registry_servers {'
  - '          server registry:5000;'
  - '      }'
  - '      upstream jenkins_servers {'
  - '          server jenkins:8080;'
  - '      }'
  - '      server {'
  - '          resolver kube-dns.kube-system.svc.cluster.local;'
  - '          error_log /nginx.log debug;'
  - '          access_log /access.log;'
  - '          client_max_body_size 0;'
  - '          listen 9200;'
  - '          add_header X-Frame-Options "SAMEORIGIN";'
  - '          proxy_set_header        Host $host;'
  - '          proxy_set_header        X-Real-IP $remote_addr;'
  - '          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;'
  - '          proxy_set_header        X-Forwarded-Proto $scheme;'
  - '          proxy_set_header        X-Forwarded-Host $http_host;'
  - '          location / {'
  - '              proxy_pass          http://kibana_servers;'
  - '          }'
  - '          location /kibana {'
  - '              proxy_pass          http://kibana_servers/app/kibana;'
  - '          }'
  - '          location ~ /elastic(/|$)(.*) {'
  - '              proxy_pass          http://elasticsearch_servers/$2$is_args$args;'
  - '          }'
  - '          location /v2 {'
  - '              proxy_pass          http://registry:5000;'
  - '              proxy_read_timeout  900;'
  - '          }'
  - '          location /jenkins {'
  - '              proxy_pass          http://jenkins:8080;'
  - '          }'
  - '      }'
  - '      '' | tee /etc/nginx/conf.d/default.conf && nginx -s reload'
  - ''
  digest: f380cf7874810f4d2712e27697f697956959ed4bf18a5b40d4d3a01285dd2482
  filename: howto-debug-nginx.txt
  group: nginx
  links:
  - http://nginx.org/en/CHANGES
  - https://tenzer.dk/nginx-with-dynamic-upstreams/
  - https://www.nginx.com/blog/dns-service-discovery-nginx-plus/
  - https://www.nginx.com/resources/admin-guide/debug/
  runalias: ''
  tags:
  - debug
  - howto
  - logging
  - nginx
  utc: '2018-01-05 13:02:56'
  versions: ''
- brief: Debugging Elastic Beats
  category: solution
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Elastic Beats'
  - '##'
  - '## DATE  : 2017-10-20 11:11:19'
  - '## GROUP : beats'
  - '## TAGS  : Elastic,beats,filebeat,debug,howto'
  - '## FILE  : howto-debug-elastic-beats.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Debug and configure Elastic Beats.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Filebeat configuration'
  - '    > https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html'
  - ''
  - '    # Enable logs from Filebeat'
  - '    > https://www.elastic.co/guide/en/beats/filebeat/master/enable-filebeat-debugging.html'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Run Filebeat with full log level'
  - '    $ ./filebeat -e -c config/filebeat.yml -d "*"'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Filebeat configuration'
  - '    $ vi config/filebeat.yml'
  - '      filebeat.prospectors:'
  - '      - input_type: log'
  - '        paths:'
  - '          - ./examples/cbts-syslogs.log'
  - '        fields:'
  - '          es_index: "petelk.syslog"'
  - '          es_codec: "plain"'
  - '          es_class: "syslog"'
  - ''
  - '      - input_type: log'
  - '        paths:'
  - '          - ./examples/counters.json'
  - '        fields:'
  - '          es_index: "petelk.counters"'
  - '          es_codec: "json"'
  - '          es_class: "counter"'
  - ''
  - '      #processors:'
  - '      # - decode_json_fields:'
  - '      #     fields: ["message"]'
  - '      #     process_array: false'
  - '      #     max_depth: 3'
  - '      #     when:'
  - '      #       equals:'
  - '      #         fields.es_codec: "json"'
  - ''
  - '      output.logstash:'
  - '        hosts: ["logstash:5044"]'
  - ''
  - '    # Logstash pipeline configuration.'
  - '    $ vi pipeline/filebeat.json'
  - '      input {'
  - '          beats {'
  - '              port => 5044'
  - '          }'
  - '      }'
  - ''
  - '      filter {'
  - '          if [fields][es_codec] == "json" {'
  - '              json {'
  - '                  source => "message"'
  - '              }'
  - '          }'
  - '      }'
  - ''
  - '      output {'
  - '          if [fields][es_codec] == "plain" {'
  - '              elasticsearch {'
  - '                  hosts => ["elasticsearch:9200"]'
  - '                  index => "%{[fields][es_index]}-%{+YYYY.MM.dd}"'
  - '                  document_type => "%{[fields][es_class]}"'
  - '                  user => "elastic"'
  - '                  password => "changeme"'
  - '              }'
  - '          } else {'
  - '              elasticsearch {'
  - '                  hosts => ["elasticsearch:9200"]'
  - '                  index => "%{[fields][es_index]}-%{+YYYY.MM.dd}"'
  - '                  document_type => "%{[fields][es_class]}"'
  - '                  user => "elastic"'
  - '                  password => "changeme"'
  - '              }'
  - '          }'
  - '      }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: 76a1a02951f6bcb423103b67c1deafd79c0ae19e46dedda910c2770cc2c2e26e
  filename: howto-debug-elastic-beats.txt
  group: beats
  links:
  - https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html
  - https://www.elastic.co/guide/en/beats/filebeat/master/enable-filebeat-debugging.html
  runalias: ''
  tags:
  - Elastic
  - beats
  - debug
  - filebeat
  - howto
  utc: '2017-10-30 08:21:40'
  versions: ''
- brief: Debugging Docker
  category: solution
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Docker '
  - '##'
  - '## DATE  : 2017-11-14 10:36:39'
  - '## GROUP : docker'
  - '## TAGS  : docker,debug,howto,swarm'
  - '## FILE  : howto-debug-docker.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Instructions how to debug Docker.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # Docker version 17.09.0-ce, build afdb6d4'
  - '    # docker-compose version 1.16.1, build 6d1ac21'
  - ''
  - '    # Docker CE release notes'
  - '    > https://docs.docker.com/release-notes/docker-ce/'
  - ''
  - '    # Docker-compose release notes'
  - '    > https://github.com/docker/compose/releases/'
  - ''
  - '    # Name server lookup'
  - '    > https://www.computerhope.com/unix/unslooku.htm'
  - ''
  - '    # Resolving host names from containers'
  - '    > https://github.com/docker/libnetwork/pull/1855'
  - '    > https://github.com/docker/swarmkit/issues/1242'
  - ''
  - '    # Docker swarm DNS update problem'
  - '    > https://github.com/moby/moby/issues/30487'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Login to remote registry'
  - '    $ docker login -u admin -p registry 10.133.200.67:5000'
  - ''
  - '    # Creating and updating services in docker swarm'
  - '    $ docker service ls'
  - '    $ docker service rm elk_elasticsearch'
  - '    $ docker service create --network elk_default --name elk_elasticsearch --hostname={{.Service.Name}}-{{.Task.Slot}}
    elk/elasticsearch:latest'
  - '    $ docker service create --network elk_default --name elk_nginx --host elk_kibana:10.0.0.15
    --host elk_elasticsearch:10.0.0.20 elk/nginx:latest'
  - '    $ docker service update --force 2cp9rhiul9ss'
  - ''
  - '    # Inspecting swarm'
  - '    $ docker node ls'
  - ''
  - '    # Inspecting swarm default overlay network'
  - '    $ docker network ls'
  - '    $ docker network inspect elk_default'
  - ''
  - '    # Inspecting swarm networking'
  - '    $ docker service ls'
  - '    $ docker service inspect --pretty elk_elasticsearch'
  - '    $ docker network ls'
  - '    $ docker inspect elk_default'
  - ''
  - '    # Name server lookup'
  - '    $ nslookup -type=a elasticsearch'
  - ''
  - '    # Docker host networking'
  - '    $ iptables -t nat --list'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Problem "error creating vxlan interface: file exists" in swarm. The'
  - '    # symptom is that no services can be started in swarm mode. The solution'
  - '    # was tried with ''Docker version 17.09.0-ce, build afdb6d4'' on RHEL7.4'
  - '    # with Kernel 3.10.0-693.el7.x86_64.'
  - '    > https://github.com/docker/libnetwork/issues/1765'
  - '    $ journalctl -f | grep ''error creating vxlan'''
  - '    $ docker swarm leave --force'
  - '    $ systemctl restart docker.service'
  - '    $ docker swarm init'
  - ''
  - '    # Proxy settings for Docker'
  - '    $ env | grep http'
  - '    $ mkdir /etc/systemd/system/docker.service.d'
  - '    $ vi /etc/systemd/system/docker.service.d/http-proxy.conf'
  - ''
  - '      [Service]'
  - '      Environment="HTTP_PROXY=http://10.158.100.1:8080/"'
  - ''
  - '    # Move Docker device mapper to ephemeral to gain more disk space'
  - '    $ df -h'
  - '    $ df -i'
  - '    $ docker rm $(docker ps -a -q)'
  - '    $ docker rmi $(docker images -q)'
  - '    $ sudo systemctl stop docker'
  - '    $ ls -al /var/lib/docker'
  - '    $ rm -rdf /var/lib/docker'
  - '    $ mkdir -p /ephemeral/docker/devicemapper/devicemapper'
  - '    $ dd if=/dev/zero of=/ephemeral/docker/devicemapper/devicemapper/data bs=1G
    count=0 seek=250'
  - '    $ sudo systemctl cat docker'
  - '    $ vi /usr/lib/systemd/system/docker.service'
  - '         ExecStart=/usr/bin/dockerd -g /ephemeral/docker'
  - '    $ sudo systemctl daemon-reload'
  - '    $ sudo systemctl enable docker.service'
  - '    $ sudo systemctl start docker'
  - '    $ docker info | grep "Data Space Available"'
  - '         Data Space Available: 268.4 GB'
  - '    $ docker run --rm hello-world'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: 763a463d6fd3dc08fe480e8ed67c26186a290d3f56554108e41df8242f89f6c8
  filename: howto-debug-docker.txt
  group: docker
  links:
  - https://docs.docker.com/release-notes/docker-ce/
  - https://github.com/docker/compose/releases/
  - https://github.com/docker/libnetwork/issues/1765
  - https://github.com/docker/libnetwork/pull/1855
  - https://github.com/docker/swarmkit/issues/1242
  - https://github.com/moby/moby/issues/30487
  - https://www.computerhope.com/unix/unslooku.htm
  runalias: ''
  tags:
  - debug
  - docker
  - howto
  - swarm
  utc: '2017-12-04 14:31:33'
  versions: ''
- brief: Debugging Kubernetes
  category: solution
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Kubernetes '
  - '##'
  - '## DATE  : 2018-01-09 11:11:43'
  - '## GROUP : kubernetes'
  - '## TAGS  : kubernetes,debug,howto,docker,moby'
  - '## FILE  : howto-debug-kubernetes.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Debug and configure Kubernetes'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # clientVersion: gitVersion: v1.9.1'
  - '    # serverVersion: gitVersion: v1.9.1'
  - ''
  - '    # Release notes'
  - '    > https://github.com/kubernetes/kubernetes/releases'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Version'
  - '    $ kubectl version -o yaml'
  - ''
  - '    # Nodes'
  - '    $ kubectl get nodes'
  - ''
  - '    # Pods'
  - '    $ kubectl get pods -n kube-system'
  - ''
  - '    # Namespaces'
  - '    $ kubectl get namespace'
  - '    $ kubectl create namespace elk'
  - '    $ kubectl config set-context $(kubectl config current-context) --namespace=elk'
  - '    $ kubectl get all --namespace elk'
  - ''
  - '    # Deployments and scaling'
  - '    $ kubectl get deployments'
  - '    $ kubectl scale --current-replicas=1 --replicas=2 deployment/debugger'
  - ''
  - '    # Services'
  - '    $ kubectl create -f ./manifests/301-svc-registry.yaml'
  - '    $ kubectl delete -f ./manifests/301-svc-registry.yaml'
  - '    $ kubectl get service cm -o=yaml'
  - '    $ kubectl get all -o wide'
  - ''
  - '    # Logs'
  - '    $ kubectl get pods'
  - '    $ kubectl logs nginx-3107262526-k01hd'
  - '    $ kubectl logs $(kubectl get pods | egrep -m 1 ''redis'' | awk ''{print $1}'')'
  - ''
  - '    # Kube DNS'
  - '    $ kubectl get po --all-namespaces'
  - '    $ kubectl get ep kube-dns --namespace=kube-system'
  - '    $ kubectl describe svc kube-dns --namespace=kube-system'
  - '    $ kubectl describe po kube-dns-6f4fd4bdf-gqcj9 --namespace=kube-system'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: 35ca34680b167cce06d57a3d368c9ba98ea412aa92961d09a1facb18bc963195
  filename: howto-debug-kubernetes.txt
  group: kubernetes
  links:
  - https://github.com/kubernetes/kubernetes/releases
  runalias: ''
  tags:
  - debug
  - docker
  - howto
  - kubernetes
  - moby
  utc: '2018-01-09 12:37:06'
  versions: ''
metadata:
  homepage: https://github.com/heilaaks/snippy
  utc: '2018-01-09 12:37:30'
  version: 0.7.0
