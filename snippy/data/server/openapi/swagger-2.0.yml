swagger: '2.0'

info:
  version: "1.0"
  title: Snippy JSON RESTish API
  description: >-
    Snippy provides command, solution, reference and code manager through JSON
    RESTish API. The API follows subset of JSON API specification v1.0.
  termsOfService: "https://github.com/heilaaks/snippy"
  contact:
    email: "laaksonen.heikki.j@gmail.com"
  license:
    name: "GNU AGPLv3 or later"
    url: "https://github.com/heilaaks/snippy/blob/master/LICENSE"
host: "snippettips.com"
basePath: "/snippy/api/app/v1"
paths:
  /{category}:
    post:
      tags:
        - "content"
      summary: "Add new content"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-body/snippets'
      responses:
        201:
          $ref: "#/components/responses/201"
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "content"
      summary: "Search content"
      description: ""
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-query/sall'
        - $ref: '#/parameters-query/stag'
        - $ref: '#/parameters-query/sgrp'
        - $ref: '#/parameters-query/digest'
        - $ref: '#/parameters-query/data'
        - $ref: '#/parameters-query/filter'
        - $ref: '#/parameters-query/limit'
        - $ref: '#/parameters-query/offset'
        - $ref: '#/parameters-query/sort'
        - $ref: '#/parameters-query/fields'
      responses:
        200:
          $ref: "#/components/responses/200-collection"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /{category}/{digest}:
    post:
      tags:
        - "content"
      summary: "Override POST with PUT, PATCH or DELETE"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-path/digest'
        - $ref: '#/parameters-header/x-override'
        - $ref: '#/parameters-body/snippets'
      responses:
        200:
          description: "Content updated"
          schema:
            $ref: "#/definitions/ResponseResource"
        204:
          description: "Content deleted"
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - "content"
      summary: "Update defined content based on digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-path/digest'
        - $ref: '#/parameters-body/snippet'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
    patch:
      tags:
        - "content"
      summary: "Update defined content based on digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-path/digest'
        - $ref: '#/parameters-body/snippet'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "content"
      summary: "Search defined content based on digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-path/digest'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
      - "content"
      summary: "Delete defined content based on digest"
      description: ""
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-path/digest'
      responses:
        204:
          $ref: "#/components/responses/204"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
  /{category}/{digest}/{fields}:
    get:
      tags:
        - "content"
      summary: "Search defined content based on digest"
      description: ""
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/category'
        - $ref: '#/parameters-path/digest'
        - $ref: '#/parameters-path/fields'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /{keywords}:
    get:
      tags:
        - "keywords"
      summary: "Search content based on given keywords"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/keywords'
        - $ref: '#/parameters-query/scat'
        - $ref: '#/parameters-query/stag'
        - $ref: '#/parameters-query/sgrp'
        - $ref: '#/parameters-query/digest'
        - $ref: '#/parameters-query/data'
        - $ref: '#/parameters-query/filter'
        - $ref: '#/parameters-query/limit'
        - $ref: '#/parameters-query/offset'
        - $ref: '#/parameters-query/sort'
        - $ref: '#/parameters-query/fields'
      responses:
        200:
          $ref: "#/components/responses/200-collection"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /group/{groups}:
    get:
      tags:
        - "group"
      summary: "Search content from defined group or groups"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/groups'
        - $ref: '#/parameters-query/sall'
        - $ref: '#/parameters-query/scat'
        - $ref: '#/parameters-query/stag'
        - $ref: '#/parameters-query/digest'
        - $ref: '#/parameters-query/data'
        - $ref: '#/parameters-query/filter'
        - $ref: '#/parameters-query/limit'
        - $ref: '#/parameters-query/offset'
        - $ref: '#/parameters-query/sort'
        - $ref: '#/parameters-query/fields'
      responses:
        200:
          $ref: "#/components/responses/200-collection"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /tags/{tags}:
    get:
      tags:
        - "tags"
      summary: "Search content with defined tags"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/tags'
        - $ref: '#/parameters-query/sall'
        - $ref: '#/parameters-query/scat'
        - $ref: '#/parameters-query/sgrp'
        - $ref: '#/parameters-query/digest'
        - $ref: '#/parameters-query/data'
        - $ref: '#/parameters-query/filter'
        - $ref: '#/parameters-query/limit'
        - $ref: '#/parameters-query/offset'
        - $ref: '#/parameters-query/sort'
        - $ref: '#/parameters-query/fields'
      responses:
        200:
          $ref: "#/components/responses/200-collection"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /uuid/{uuid}:
    get:
      tags:
        - "uuid"
      summary: "Search content with defined uuid"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/uuid'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /uuid/{uuid}{fields}:
    get:
      tags:
        - "uuid"
      summary: "Search content with defined uuid"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/uuid'
        - $ref: '#/parameters-path/fields'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /digest/{digest}:
    get:
      tags:
        - "digest"
      summary: "Search content with defined digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/digest'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /digest/{digest}{fields}:
    get:
      tags:
        - "digest"
      summary: "Search content with defined digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters-path/digest'
        - $ref: '#/parameters-path/fields'
      responses:
        200:
          $ref: "#/components/responses/200-resource"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
components:
  responses:
    "200-resource":
      description: OK
      schema:
        $ref: "#/definitions/ResponseResource"
    "200-collection":
      description: OK
      schema:
        $ref: "#/definitions/ResponseCollectionGet"
    "201":
      description: "Content created"
      schema:
        $ref: "#/definitions/ResponseCollectionPost"
    "204":
      description: "Content deleted"
    "400":
      description: "Request not syntactically correct"
      schema:
        $ref: '#/definitions/Errors'
    "403":
      description: "Using client generated ID is not supported"
      schema:
        $ref: '#/definitions/Errors'
    "404":
      description: "Content not found"
      schema:
        $ref: '#/definitions/Errors'
    "409":
      description: "More than one content found"
      schema:
        $ref: '#/definitions/Errors'
    "500":
      description: "Internal server error"
definitions:
  RequestResource:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/RequestData'
    required:
      - data
  ResponseResource:
    type: object
    properties:
      data:
        $ref: '#/definitions/ResponseData'
      links:
        $ref: '#/definitions/Links'
    required:
      - data
  RequestCollection:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/RequestData'
    required:
      - data
  ResponseCollectionPost:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ResponseData'
    required:
      - data
  ResponseCollectionGet:
    type: object
    properties:
      meta:
        $ref: '#/definitions/ResponseMeta'
      data:
        type: array
        items:
          $ref: '#/definitions/ResponseData'
      links:
        $ref: '#/definitions/ResponseLinks'
    required:
      - meta
      - data
  Links:
    type: object
    properties:
      self:
        type: string
        description: "Link pointing to resource."
  RequestData:
    type: object
    properties:
      type:
        type: string
        enum: [snippet, solution, reference]
      attributes:
        $ref: '#/definitions/Attributes'
    required:
      - type
      - attributes
  ResponseMeta:
    type: object
    properties:
      count:
        type: string
        description: "Number of content items in data list."
      limit:
        type: string
        description: "The search limit used in request."
      offset:
        type: string
        description: "The search offset used in request."
      total:
        type: string
        description: "Total number of search results without limit being applied."
    required:
      - count
      - limit
      - offset
      - total
  ResponseData:
    type: object
    properties:
      type:
        type: string
        enum: [snippet, solution, reference]
      id:
        type: string
      attributes:
        $ref: '#/definitions/Attributes'
    required:
      - type
      - attributes
  ResponseLinks:
    type: object
    properties:
      self:
        type: string
        format: uri
        description: "Pagination link to this page."
      first:
        type: string
        format: uri
        description: "Pagination link to first page."
      next:
        type: string
        format: uri
        description: "Pagination link to next page."
      prev:
        type: string
        format: uri
        description: "Pagination link to previous page."
      last:
        type: string
        format: uri
        description: "Pagination link to last page."
    required:
      - self
      - first
      - last
  Attributes:
    type: object
    properties:
      data:
        type: array
        items:
          type: string
        description: "Mandatory content data in list context with one line per element."
      brief:
        type: string
        description: "Optional brief description of the content."
      group:
        type: string
        description: "Optional group to which the content belongs."
        default: default
      tags:
        type: array
        items:
          type: string
        description: "Optional list of tags."
      links:
        type: array
        items:
          type: string
        description: "Optional list of refrence links."
      category:
        type: string
        enum: [snippet, solution, reference]
        description: "Automatically assigned content category."
      name:
        type: string
        description: "Optional name for the content."
      filename:
        type: string
        description: >-
          Optional filename that that defines automatically used filename when
          content is exported.
      versions:
        type: string
        description: "Optional list of services and versions related to the content."
      source:
        type: string
        description: "Optional external source for the content."
      uuid:
        type: string
        description: "Automatically assigned UUID for the content."
      created:
        type: string
        description: >-
          Optional UTC timestamp for creation time in ISO 8601 format that is automatically
          assigned.
      updated:
        type: string
        description: >-
          Optional UTC timestamp for the last update time in ISO 8601 format that is automatically
          assigned.
      digest:
        type: string
        description: >-
          Automatically assigned message digest that uniquely identifies the content.
    required:
      - data
  Errors:
    type: object
    properties:
      meta:
        $ref: '#/definitions/Meta'
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'
    required:
      - meta
      - errors
  Meta:
    type: object
    properties:
      version:
        type: string
        description: "Server version."
      homepage:
        type: string
        description: "Server homepage URL."
    required:
      - version
      - homepage
  Error:
    type: object
    properties:
      status:
        type: string
        description: "HTTP status code."
      statusString:
        type: string
        description: "HTTP status as text string."
      module:
        type: string
        description: "Location of error."
      title:
        type: string
        description: "Message describing the error."
    required:
      - status
      - statusString
      - module
      - title
parameters-path:
  category:
    name: category
    type: string
    in: path
    required: true
    description: "Content category."
    enum: [snippets, solutions, references]
    x-example:
      - "snippets"
  uuid:
    name: uuid
    type: string
    in: path
    required: true
    description: "Uuid that defines the content."
    x-example:
      - "27cd5827-b6ef-4067-b5ac-3ceac07dde9f"
      - "27cd5827-b6ef"
  digest:
    name: digest
    type: string
    in: path
    required: true
    description: "Unique content identified by a message digest."
    x-example:
      - "54e41e9b52a02b631b5c65a6a053fcbabc77ccd42b02c64fdfbc76efdb18e319"
      - "54e41e9b52a02b63"
  fields:
    name: fields
    type: string
    in: path
    required: true
    description: "Field or fields that are returned."
    enum: [data, brief, group, tags, links, category, name, filename, versions, source, uuid, created, updated, digest]
    x-example:
      - "brief"
      - "brief,tags"
      - "brief,group,tags"
  groups:
    name: groups
    type: string
    in: path
    required: true
    description: "Group or groups where the search is applied."
    x-example:
      - "docker"
      - "docker,python"
      - "docker,python,security"
  tags:
    name: tags
    type: string
    in: path
    required: true
    description: "Tag or tags where the search is applied."
    x-example:
      - "docker"
      - "docker,mody"
      - "docker,mody,kubernetes"
  keywords:
    name: keywords
    type: string
    in: path
    required: true
    description: "Keywords used to search all content."
    x-example:
      - "docker"
      - "docker,mody"
      - "docker,mody,kubernetes"
parameters-header:
  x-override:
    name: X-HTTP-Method-Override
    type: string
    in: header
    description: "Override POST method."
    enum: [PUT, PATCH, DELETE]
    required: true
parameters-body:
  snippet:
    name: snippet
    in: body
    description: "Existing content that is updated"
    required: true
    schema:
      $ref: "#/definitions/RequestResource"
  snippets:
    name: snippets
    in: body
    description: "New content to be created"
    required: true
    schema:
      $ref: "#/definitions/RequestCollection"
parameters-query:
  sall:
    name: sall
    type: array
    items:
      type: string
    in: query
    required: false
    description: "Search keywords from all fields."
  scat:
    name: scat
    type: array
    items:
      type: string
    default: [snippet, solution, reference]
    enum: [snippet, solution, reference]
    in: query
    required: false
    description: "Search keywords from listed categories."
  stag:
    name: stag
    type: array
    items:
      type: string
    in: query
    required: false
    description: "Search keywords only from tag field."
  sgrp:
    name: sgrp
    type: array
    items:
      type: string
    in: query
    required: false
    description: "Search keywords only from listed groups."
  digest:
    name: digest
    type: string
    in: query
    required: false
    description: "Search only based on message digest field."
  data:
    name: data
    type: string
    in: query
    required: false
    description: "Search only from content data."
  filter:
    name: filter
    type: string
    in: query
    required: false
    description: "Filter search result with provided regexp."
  limit:
    name: limit
    type: string
    default: 20
    in: query
    required: false
    description: "Limit query result list."
  offset:
    name: offset
    type: string
    default: 0
    in: query
    required: false
    description: "Offset from the beginning of search results."
  sort:
    name: sort
    type: string
    default: brief
    enum: [data, brief, group, tags, links, category, name, filename, versions, source, uuid, created, updated, digest]
    in: query
    required: false
    description: "Sort based on defined field."
  fields:
    name: fields
    type: array
    items:
      type: string
      enum: [data, brief, group, tags, links, category, name, filename, versions, source, uuid, created, updated, digest]
    in: query
    required: false
    description: "Limit fields that are returned in result list."
