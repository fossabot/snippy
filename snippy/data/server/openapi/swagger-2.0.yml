swagger: "2.0"

info:
  version: "1.0"
  title: Snippy JSON RESTish API
  description: >-
    Snippy provides command and solution snippet management through JSON
    RESTish API. The API follows subset of JSON API specification v1.0.
  termsOfService: "https://github.com/heilaaks/snippy"
  contact:
    email: "laaksonen.heikki.j@gmail.com"
  license:
    name: "GNU AGPLv3 or later"
    url: "https://github.com/heilaaks/snippy/blob/master/LICENSE"
host: "snippettips.com"
basePath: "/snippy/api/app/v1"
paths:
  /snippets:
    post:
      tags:
        - "snippet"
      summary: "Add new snippets"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - name: snippet
          in: body
          description: "New snippet to be created"
          required: true
          schema:
            $ref: "#/definitions/RequestCollection"
      responses:
        201:
          description: "Snippet created"
          schema:
            $ref: "#/definitions/ResponseCollectionPost"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        403:
          description: "Using client generated ID is not supported"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
    get:
      tags:
        - "snippet"
      summary: "Search snippets"
      description: ""
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - $ref: '#/parameters/sall'
        - $ref: '#/parameters/stag'
        - $ref: '#/parameters/sgrp'
        - $ref: '#/parameters/digest'
        - $ref: '#/parameters/data'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/fields'
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseCollectionGet"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
  /snippets/{digest}:
    post:
      tags:
        - "snippet"
      summary: "Override POST with PUT, PATCH or DELETE"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: "Unique snippet identified by message digest."
          x-example: 6dc4b06991780012
        - name: X-HTTP-Method-Override
          in: header
          description: "Override POST method."
          type: string
          enum:
            - PUT
            - PATCH
            - DELETE
          required: true
        - name: snippet
          in: body
          description: "New snippet to be created"
          required: true
          schema:
            $ref: "#/definitions/RequestCollection"
      responses:
        200:
          description: "Snippet updated"
          schema:
            $ref: "#/definitions/ResponseResource"
        204:
          description: "Snippet deleted"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        403:
          description: "Using client generated ID is not supported"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
    put:
      tags:
        - "snippet"
      summary: "Update defined snippet based on digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: "Unique snippet identified by message digest."
          x-example: 6dc4b06991780012
        - name: snippet
          in: body
          description: "Existing snippet that is updated"
          required: true
          schema:
            $ref: "#/definitions/RequestResource"
      responses:
        200:
          description: "Snippet updated"
          schema:
            $ref: "#/definitions/ResponseResource"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        403:
          description: "Using client generated ID is not supported"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
    patch:
      tags:
        - "snippet"
      summary: "Update defined snippet based on digest"
      description: ""
      consumes:
        - "application/vnd.api+json; charset=UTF-8"
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: "Unique snippet identified by message digest."
          x-example: 6dc4b06991780012
        - name: snippet
          in: body
          description: "Existing snippet that is updated"
          required: true
          schema:
            $ref: "#/definitions/RequestResource"
      responses:
        200:
          description: "Snippet updated"
          schema:
            $ref: "#/definitions/ResponseResource"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        403:
          description: "Using client generated ID is not supported"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
    get:
      tags:
        - "snippet"
      summary: "Search defined snippet based on digest"
      description: ""
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: "Unique snippet identified by message digest."
          x-example: 44afdd0c59e17159
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ResponseResource"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
    delete:
      tags:
      - "snippet"
      summary: "Delete defined snippet based on digest"
      description: ""
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: "Unique snippet identified by message digest."
          x-example: a516e2d6f8aa5c6f
      responses:
        204:
          description: "Snippet deleted"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        409:
          description: "More than one snippet found"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
  /snippets/{digest}/{field}:
    get:
      tags:
        - "snippet"
      summary: "Search defined snippet based on digest"
      description: ""
      produces:
        - "application/vnd.api+json; charset=UTF-8"
      parameters:
        - name: digest
          in: path
          type: string
          required: true
          description: "Unique snippet identified by message digest."
          x-example: 44afdd0c59e17159
        - name: field
          in: path
          type: string
          enum: [data, brief, group, tags, links, category, name, filename, versions, created, updated, digest]
          required: true
          description: "One of the resource field attributes."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ResponseResource"
        400:
          description: "Request not syntactically correct"
          schema:
            $ref: '#/definitions/Errors'
        404:
          description: "Snippet not found"
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: "Internal server error"
definitions:
  RequestResource:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/RequestData'
    required:
      - data
  ResponseResource:
    type: object
    properties:
      data:
        $ref: '#/definitions/ResponseData'
      links:
        $ref: '#/definitions/Links'
    required:
      - data
  RequestCollection:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/RequestData'
    required:
      - data
  ResponseCollectionPost:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ResponseData'
    required:
      - data
  ResponseCollectionGet:
    type: object
    properties:
      meta:
        $ref: '#/definitions/ResponseMeta'
      data:
        type: array
        items:
          $ref: '#/definitions/ResponseData'
      links:
        $ref: '#/definitions/ResponseLinks'
    required:
      - meta
      - data
  Links:
    type: object
    properties:
      self:
        type: string
        description: "Link pointing to resource."
  RequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - snippet
          - solution
      attributes:
        $ref: '#/definitions/Attributes'
    required:
      - type
      - attributes
  ResponseMeta:
    type: object
    properties:
      count:
        type: string
        description: "Number of content items in data list."
      limit:
        type: string
        description: "The search limit used in request."
      offset:
        type: string
        description: "The search offset used in request."
      total:
        type: string
        description: "Total number of search results without limit being applied."
    required:
      - count
      - limit
      - offset
      - total
  ResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - snippet
          - solution
      id:
        type: string
      attributes:
        $ref: '#/definitions/Attributes'
    required:
      - type
      - attributes
  ResponseLinks:
    type: object
    properties:
      self:
        type: string
        format: uri
        description: "Pagination link to this page."
      first:
        type: string
        format: uri
        description: "Pagination link to first page."
      next:
        type: string
        format: uri
        description: "Pagination link to next page."
      prev:
        type: string
        format: uri
        description: "Pagination link to previous page."
      last:
        type: string
        format: uri
        description: "Pagination link to last page."
    required:
      - self
      - first
      - last
  Attributes:
    type: object
    properties:
      data:
        type: array
        items:
          type: string
        description: "Mandatory content data in list context with one line per element."
      brief:
        type: string
        description: "Optional brief description of the content."
      group:
        type: string
        description: "Optional group to which the content belongs."
        default: default
      tags:
        type: array
        items:
          type: string
        description: "Optional list of tags."
      links:
        type: array
        items:
          type: string
        description: "Optional list of refrence links."
      category:
        type: string
        enum:
          - snippet
          - solution
        description: "Automatically assigned content category."
      name:
        type: string
        description: "Optional alias to run the content."
      filename:
        type: string
        description: >-
          Optional filename that that defines automatically used filename when
          content is exported.
      versions:
        type: string
        description: "Optional list of services and versions related to the snippet."
      created:
        type: string
        description: >-
          Optional UTC timestamp for creation time in ISO 8601 format that is automatically
          assigned.
      updated:
        type: string
        description: >-
          Optional UTC timestamp for the last update time in ISO 8601 format that is automatically
          assigned.
      digest:
        type: string
        description: >-
          Automatically assigned message digest that uniquely identifies the content.
    required:
      - data
  Errors:
    type: object
    properties:
      meta:
        $ref: '#/definitions/Meta'
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'
    required:
      - meta
      - errors
  Meta:
    type: object
    properties:
      version:
        type: string
        description: "Server version."
      homepage:
        type: string
        description: "Server homepage URL."
    required:
      - version
      - homepage
  Error:
    type: object
    properties:
      status:
        type: string
        description: "HTTP status code."
      statusString:
        type: string
        description: "HTTP status as text string."
      module:
        type: string
        description: "Location of error."
      title:
        type: string
        description: "Message describing the error."
    required:
      - status
      - statusString
      - module
      - title
parameters:
  sall:
    name: sall
    type: array
    items:
      type: string
    in: query
    required: false
    description: "Search keywords from all fields."
  stag:
    name: stag
    type: array
    items:
      type: string
    in: query
    required: false
    description: "Search keywords only from tag field."
  sgrp:
    name: sgrp
    type: array
    items:
      type: string
    in: query
    required: false
    description: "Search keywords only from group field."
  digest:
    name: digest
    type: string
    in: query
    required: false
    description: "Search only based on message digest field."
  data:
    name: data
    type: string
    in: query
    required: false
    description: "Search only from content data."
  filter:
    name: filter
    type: string
    in: query
    required: false
    description: "Filter search result with provided regexp."
  limit:
    name: limit
    type: string
    default: 20
    in: query
    required: false
    description: "Limit query result list."
  offset:
    name: offset
    type: string
    default: 0
    in: query
    required: false
    description: "Offset from the beginning of search results."
  sort:
    name: sort
    type: string
    default: brief
    enum: [data, brief, group, tags, links, category, name, filename, versions, created, updated, digest]
    in: query
    required: false
    description: "Sort based on defined field."
  fields:
    name: fields
    type: array
    items:
      type: string
      enum: [data, brief, group, tags, links, category, name, filename, versions, created, updated, digest]
    in: query
    required: false
    description: "Limit fields that are returned in result list."
